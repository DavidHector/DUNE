# options for the solver
[optimization]
# control for informational output (default: 1)
verbosity          = 2
# maximum number of iterations performed
max_iter           = 10000
# reset method after this many iterations
reset_iter         = 10000
# use N-GMRES after this many iterations (if enabled)
extrap_iter        = 1
# enable approximate eigenvalue scaling
use_scaling        = true
# enable L-BFGS quasi-Newton code
quasi_newton       = true
# enable N-GMRES extrapolation code (default: false)
extrapolation      = true
# type of nonlinear CG to use (example: hager-zhang)
conjugation        = none
# number of gradient / position difference pairs stored
storage_limit      = 10
# termination criterion for method
stoppingcriterion  = max_norm
# choice of line search
linesearch         = hager-zhang

# options for the N-GMRES extrapolation
[gmres]
# skip line search in N-GMRES preconditioner method
skip_linesearch    = false
# reset method if not a descent direction, instead of skipping
reset_on_fail      = false

# options for the termination criterion
[stoppingcriterion]
# absolute tolerance for gradient norm
abs_norm_tolerance = 1e-06
# tolerance for gradient norm relative to initial norm
rel_norm_tolerance = 0

# options for the linesearch
[linesearch]
# line search termination criterion
criterion          = nonmonotone_relaxed_wolfe
# step width proposal used for first step and after reset
initialproposal    = hager-zhang
# step width proposal used in all other steps
proposal           = constant
# multiplicative factor for proposal (e.g., two times previous step width)
proposal_factor    = 1.
# control for informational output (default: 0)
verbosity          = 2
# maximum number of iterations for expansion / contraction loops
linesearch_tries   = 100
# evaluate function values / gradients separately or jointly
combined_eval      = false
# start Hager-Zhang line search with quadratic interpolation
quad_interpolation = true
# use Hermite cubic interpolation instead of secant steps
use_cubic          = true
# threshold for trying to accept the auxiliary interpolation step width
quad_threshold     = 0.1
# threshold for using the vertex during cubic interpolation if no roots
cubic_threshold    = 0.1
# minimum factor to expand interval during expansion phase
min_expand         = 10.
# maximum factor to expand interval during expansion phase
max_expand         = 1e6
# interval cutting point, defaults to center of interval (bisection)
hz_theta           = 0.5
# threshold for performing an additional bisection step during contraction
hz_gamma           = 0.666666
# estimate of function value error for approximate Wolfe condition
hz_epsilon         = 1e-6
# coefficient in sufficient descent condition
armijo_factor      = 0.1
# coefficient in curvature condition
wolfe_factor       = 0.9
# weighting factor for average in nonmonotone line searches
hz_eta             = 1.

